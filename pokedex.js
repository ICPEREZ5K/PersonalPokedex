let apiBase = "https://pokeapi.co/api/v2/pokemon/";
let searchOffset = 0;
let pokemon = {};

// wrapper for ajax call
function getPokeData(endpoint, done) {
    $.ajax({url: endpoint , success: done});
    console.log('ajax request(s)');
}

function PokemonObj(sprite, hp, attack, defense, abilities){
    this.sprite = sprite;
    this.hp = hp;
    this.attack = attack;
    this.defense = defense;
    this.abilities = abilities;
}

// this function is called in the checkpokehash function
// checkpokehash is the result of an event listener
// identifier is the innerhtml of "activated" element.

function showPokemon(identifier){
    let v = `<p id="sprite" class="pokedata-show"><img src="${pokemon[identifier].sprite}"></p>`;
    let w = `<p class="pokedata-show">HP: ${pokemon[identifier].hp}</p>`;
    let x = `<p class="pokedata-show">ATTACK: ${pokemon[identifier].attack}</p>`;
    let y = `<p class="pokedata-show">DEFENSE: ${pokemon[identifier].defense}</p>`;
    let z = `<p class="pokedata-show">ABILITIES: ${pokemon[identifier].abilities}</p>`;
    
    if ($('.pokedata-show').length > 1){ 
        $('.pokedata-show').remove();
        $('#show-pokemon').append([v,w,x,y,z])
    } else {
        $('#show-pokemon').append([v,w,x,y,z]);
    }
}

// is passed data.abilities from createpokemon function
// Creates an array loops through the objects and pushs ability.name into the function

function abilityLoop(abilities){
    let abilityArr = []; 
    for(let i = 0; i < abilities.length; i++){
        abilityArr.push(" " + abilities[i].ability.name);
    }
    return abilityArr;
}

// happens on success of the api call nested in checkPokehash
// abilities parameter = function that

function createPokemon(data){ 
    pokemon[`${data.name}`] = new PokemonObj(
        data.sprites.front_default,
        data.stats[5].base_stat,
        data.stats[4].base_stat,
        data.stats[3].base_stat,
        abilityLoop(data.abilities)
    )
    console.log(`one pokemon ${data.name} added to hash`);
};

// checks if data for pokemon is present in pokemon hash.
// if not makes an api call concat. the pokemons name at the end of url
// creates a new pokemon object via createPokemon function

function checkPokeHash(identifier){
    
    if(pokemon[`${identifier}`] !== undefined){
         showPokemon(identifier);
    } else {
        alert(`Data for ${identifier} could not be found inside the local hash. Press OK to download from https://pokeapi.co`);
        getPokeData(`https://pokeapi.co/api/v2/pokemon/${identifier}`, createPokemon);
    } 
}

// adds active class to last clicked element whos class = result.
// pulls innerhtml of p tags generated by loadData function.

function activate(){
    event.preventDefault();
    if($('.pokemon').hasClass('active-result')){
        $('.pokemon').removeClass("active-result");
        $(this).addClass("active-result");
        checkPokeHash($(this).text());
    }
    else{
        $(this).addClass("active-result");
        checkPokeHash($(this).text());
    }   
}

// Checks if content has been loaded before.
// if so it removes all .results and loads new ones.
// event listener for activate function is also housed here.

function loadData(data){    
    if($('.search-result').length > 1){        
        $('.search-result').remove();
        for(let i = 0; i < data.results.length; i++){
            $('#search-results').append(`<p class="pokemon search-result">${data.results[i].name}</p>`);
        } 
    } 
    else {
        for(let i = 0; i < data.results.length; i++){
            $('#search-results').append(`<p class="pokemon search-result">${data.results[i].name}</p>`);
        }
    }
    
    $('.pokemon').on("click", activate);
}

// Search Offset starts at zero
// References Offest var and throws it at the end of an api call url param.

function addOffset(){
    getPokeData(`${apiBase}${'?offset='}${searchOffset += 20}`, loadData);
};
function removeOffset(){
    getPokeData(`${apiBase}${'?offset='}${searchOffset -= 20}`, loadData);
};

// Event Listeners for offset functions

$('#offsetNext').click(addOffset);
$('#offsetPrev').click(removeOffset);

// AJAX request loads the bottom section

getPokeData(apiBase, loadData);